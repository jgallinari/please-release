name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

env:
  MIX_ENV: test

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      version: "${{steps.release.outputs.major}}.${{steps.release.outputs.minor}}.${{steps.release.outputs.patch}}"
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: elixir
          package-name: please-release
          changelog-types: |
            [
              {"type":"build","section":"🧰 Other","hidden":true},
              {"type":"change","section":"🚀 Features","hidden":false},
              {"type":"chore","section":"🧰 Other","hidden":true},
              {"type":"ci","section":"🧰 Other","hidden":true},
              {"type":"deprecate","section":"⚠️ Changes","hidden":false},
              {"type":"deps","section":"🧰 Other","hidden":true},
              {"type":"docs","section":"📚 Documentation","hidden":false},
              {"type":"feat","section":"🚀 Features","hidden":false},
              {"type":"fix","section":"🐞 Bug Fixes","hidden":false},
              {"type":"int-docs","section":"📚 Internal Documentation","hidden":false},
              {"type":"perf","section":"✨ Polish","hidden":false},
              {"type":"refactor","section":"✨ Polish","hidden":false},
              {"type":"remove","section":"⚠️ Changes","hidden":false},
              {"type":"revert","section":"🐞 Bug Fixes","hidden":false},
              {"type":"security","section":"🐞 Bug Fixes","hidden":false},
              {"type":"style","section":"✨ Polish","hidden":false},
              {"type":"test","section":"🧪 Tests","hidden":false}
            ]
          extra-files: README.md

  check-release-please-pr:
    runs-on: ubuntu-latest
    needs: [release-please]
    outputs:
      pr_exists: ${{ steps.check.outputs.pr_exists }}
    steps:
      - name: Check if release PR exists
        id: check
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          prs=$(gh pr list \
            --repo "$GITHUB_REPOSITORY" \
            --json baseRefName,headRefName \
            --jq '
              map(select(.baseRefName == "main" and .headRefName == "release-please--branches--main--components--please-release"))
              | length
          ')
          if ((prs > 0)); then
            echo "pr_exists=true" >> "$GITHUB_OUTPUT"
          fi

  update-changelog:
    runs-on: ubuntu-latest
    needs: [check-release-please-pr]
    # Ensure that this job only occurs when a PR release is open
    if: ${{ needs.check-release-please-pr.outputs.pr_exists }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: release-please--branches--main--components--please-release
      - name: Setup Beam
        uses: erlef/setup-beam@v1
        with:
          otp-version: '25'
          elixir-version: '1.15'
      - run: mix deps.get
      - run: mix changelog.update
      - run: mix changelog.api
      - name: Commit and push changes if any
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: release v${{ needs.release-please.outputs.version }}"
          branch: release-please--branches--main--components--please-release

  delete-release:
    runs-on: ubuntu-latest
    needs: [release-please]
    steps:
      - name: Clean leftover releases (but keep tags)
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          tags=$(gh release list --repo "$GITHUB_REPOSITORY" | grep -v TITLE | cut -f3)
          for tag in $tags; do
            gh release delete $tag --repo "$GITHUB_REPOSITORY" --yes
          done

#  update-changelog:
#    runs-on: ubuntu-latest
#    needs: [release-please]
#    # Ensure that this job only occurs when a new release is created
#    if: ${{ needs.release-please.outputs.release_created }}
#    steps:
#      - name: Delete release (but keep the tag)
#        uses: cb80/delrel@latest
#        with:
#          tag: v${{ needs.release-please.outputs.version }}
#      - name: Checkout repo
#        uses: actions/checkout@v4
#      - name: Setup Beam
#        uses: erlef/setup-beam@v1
#        with:
#          otp-version: '25'
#          elixir-version: '1.15'
#      - run: mix deps.get
#      - run: mix changelog.update
#      - run: mix changelog.api
#      - name: Commit and push changes if any
#        uses: stefanzweifel/git-auto-commit-action@v5
#        with:
#          commit_message: "chore: release v${{ needs.release-please.outputs.version }}"

#      - name: Delete release
#        if: ${{ steps.release.outputs.release_created }}
#        uses: cb80/delrel@latest
#        with:
#          tag: v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
#      - name: Delete tag and release
#        if: ${{ steps.release.outputs.release_created }}
#        uses: dev-drprasad/delete-tag-and-release@v1.0
#        with:
#          tag_name: v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
#          github_token: ${{ github.token }}
#      - name: Create release
#        if: ${{ steps.release.outputs.release_created }}
#        uses: ncipollo/release-action@v1
#        with:
#          name: v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
#          tag: v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
#      - name: Checkout repo
#        if: ${{ steps.release.outputs.release_created }}
#        uses: actions/checkout@v4
#      - uses: erlef/setup-beam@v1
#        if: ${{ steps.release.outputs.release_created }}
#        with:
#          otp-version: '25'
#          elixir-version: '1.15'
#      - run: mix deps.get
#        if: ${{ steps.release.outputs.release_created }}
#      - run: mix changelog.update
#        if: ${{ steps.release.outputs.release_created }}
#      - run: mix changelog.api
#        if: ${{ steps.release.outputs.release_created }}
#      - uses: stefanzweifel/git-auto-commit-action@v5
#        if: ${{ steps.release.outputs.release_created }}
#        with:
#          commit_message: "chore: release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}"
